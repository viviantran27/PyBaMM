name: PyBaMM

on:
  push:
    
  pull_request:

  # everyday at 3 am UTC
  schedule:
    - cron:  '0 3 * * *'

jobs:
  
  style:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check style
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install package
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -e .[dev]

    - name: Check style
      run: python -m flake8

  build:
    needs: style
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Linux system dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install gfortran gcc libopenblas-dev liblapack-dev graphviz
        sudo apt install python${{ matrix.python-version }}.dev
    
    - name: Install MacOS system dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install graphviz
        brew install openblas
        
    - name: Install Windows system dependencies
      if: matrix.os == 'windows-latest'
      run: choco install graphviz
    
    - name: Install standard python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -e .

    - name: Install SUNDIALS and SuiteSparse
      if: matrix.os != 'windows-latest'
      run: |
        pip install wget
        git clone https://github.com/pybind/pybind11.git
        python scripts/setup_KLU_module_build.py
        export SUNDIALS_INST=$HOME/.local
        pip install scikits.odes
        pip install -e .

    - name: Run unit tests Windows
      if: matrix.os == 'windows-latest'
      run: |
        python run-tests.py --unit --folder all

    - name: Run unit tests
      if: matrix.os != 'windows-latest'
      run: |
        export LD_LIBRARY_PATH=$HOME/.local/lib:scikits.odes/sundials5/lib:$LD_LIBRARY_PATH
        python run-tests.py --unit --folder all

    - name: Install docs dependencies and run doctests
      if: matrix.os != 'windows-latest'
      run: |
        export LD_LIBRARY_PATH=$HOME/.local/lib:scikits.odes/sundials5/lib:$LD_LIBRARY_PATH
        pip install -e .[docs]
        python run-tests.py --doctest
    
    - name: Install dev dependencies and run example tests
      if: matrix.os != 'windows-latest'
      run: |
        export LD_LIBRARY_PATH=$HOME/.local/lib:scikits.odes/sundials5/lib:$LD_LIBRARY_PATH
        pip install -e .[dev]
        python run-tests.py --examples
        
    - name: Instal and run coverage
      if: success() && (matrix.os == 'unbuntu-latest' && matrix.python-version == 3.7)
      run: |
        pip install coverage codecov
        codecov
